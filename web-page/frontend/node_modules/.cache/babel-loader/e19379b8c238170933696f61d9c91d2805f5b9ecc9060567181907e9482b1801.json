{"ast":null,"code":"var _jsxFileName = \"/Users/bondino/Dropbox/CRM/imagine-houses/web-page/frontend/src/components/upload_image/upload_image.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload_image.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  //Con esta función se puede cambiar la imagen seleccionada y se guarda en una variable.\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageChange = event => {\n    //maneja el cambio de la imagen seleccionada\n    setSelectedImage(event.target.files[0]); // guarda la imagen seleccionada sin acceder al POST\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedImage) {\n      //notifica un error en consola si no se cargó una imagen y se da click en \"Submit\"\n      console.error(\"No se ha seleccionado ninguna imagen.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedImage); // agrega la imagen a la variable formData.\n\n    try {\n      await axios.post('http://localhost:8000/api/image', formData); // Se conecta a la api POST y le da la imagen en formData\n      console.log(\"Imagen enviada correctamente.\");\n    } catch (error) {\n      console.error(\"Error al enviar la imagen:\", error);\n    }\n  };\n\n  /* Returns a button of upload_image and a submit button.\n  upload_image: utiliza la función handleImageChange para que la\n  submit button: utiliza la función handle sumbit para que cuando se presione, se cargue la imagen en la api */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"initial_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file_upload\",\n        className: \"custom-file-upload\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Seleccionar a rchivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file_upload\",\n        hidden: true,\n        type: \"file\",\n        accept: \"image/*\",\n        name: \"imagen\",\n        className: \"upload_image\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"primary_button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedImage","setSelectedImage","handleImageChange","event","target","files","handleSubmit","preventDefault","console","error","formData","FormData","append","post","log","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","hidden","type","accept","name","onChange","_c","$RefreshReg$"],"sources":["/Users/bondino/Dropbox/CRM/imagine-houses/web-page/frontend/src/components/upload_image/upload_image.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload_image.css';\n\nfunction ImageUploader() { //Con esta función se puede cambiar la imagen seleccionada y se guarda en una variable.\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageChange = (event) => { //maneja el cambio de la imagen seleccionada\n    setSelectedImage(event.target.files[0]); // guarda la imagen seleccionada sin acceder al POST\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!selectedImage) { //notifica un error en consola si no se cargó una imagen y se da click en \"Submit\"\n      console.error(\"No se ha seleccionado ninguna imagen.\");\n      return;\n    }\n\n    const formData = new FormData(); \n    formData.append('image', selectedImage); // agrega la imagen a la variable formData.\n\n    try {\n      await axios.post('http://localhost:8000/api/image', formData); // Se conecta a la api POST y le da la imagen en formData\n      console.log(\"Imagen enviada correctamente.\");\n    } catch (error) {\n      console.error(\"Error al enviar la imagen:\", error);\n    }\n  };\n\n/* Returns a button of upload_image and a submit button.\nupload_image: utiliza la función handleImageChange para que la\nsubmit button: utiliza la función handle sumbit para que cuando se presione, se cargue la imagen en la api */\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"initial_form\"> \n        <label htmlFor=\"file_upload\" className=\"custom-file-upload\">\n        <span>Seleccionar a rchivo</span>\n        </label>\n        <input id=\"file_upload\" hidden type=\"file\" accept=\"image/*\" name=\"imagen\" className=\"upload_image\"  onChange={handleImageChange} />\n        <button type=\"submit\" className=\"primary_button\">Submit</button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default ImageUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAAE;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IAAE;IACrCF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACP,aAAa,EAAE;MAAE;MACpBQ,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;MACtD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,aAAa,CAAC,CAAC,CAAC;;IAEzC,IAAI;MACF,MAAML,KAAK,CAACkB,IAAI,CAAC,iCAAiC,EAAEH,QAAQ,CAAC,CAAC,CAAC;MAC/DF,OAAO,CAACM,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAEH;AACA;AACA;EACE,oBACEZ,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAMmB,QAAQ,EAAEV,YAAa;MAACW,SAAS,EAAC,cAAc;MAAAF,QAAA,gBACpDlB,OAAA;QAAOqB,OAAO,EAAC,aAAa;QAACD,SAAS,EAAC,oBAAoB;QAAAF,QAAA,eAC3DlB,OAAA;UAAAkB,QAAA,EAAM;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACRzB,OAAA;QAAO0B,EAAE,EAAC,aAAa;QAACC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,cAAc;QAAEW,QAAQ,EAAE1B;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnIzB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACvB,EAAA,CAzCQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}